openapi: 3.0.1
info:
  title: Project for Ya.Lyceum "Programming on Go 2025" Calculator service
  version: version not set
  description: >
    API для конкурентного вычисления сложных математических операций.
tags:
  - name: Expressions
    description: 'Управление выражениями: создание и получение'
  - name: Tasks
    description: 'Управление заданиями: создание и получение результата'
servers:
- url: http://localhost:8989/api/v1
paths:
  /calculate:
    post:
      tags:
        - Expressions
      summary: Создание выражения
      description: Возвращает ID выражения.
      operationId: createExpression
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createExpressionReq'
        required: true
      responses:
        "201":
          description: Выражение принято для вычисления.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createExpressionResp'
        "400":
          description: Невалидное тело запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Невалидные данные.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Внутренняя ошибка сервиса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /expressions:
    get:
      tags:
        - Expressions
      summary: Получение выражений с пагинацией в порядке создания от новых к старым.
      description: Возвращает список выражений и общее количество выражений.
      operationId: getExpressions
      parameters:
        - in: query
          name: size
          schema:
            type: integer
          description: Количество элементов на странице.
        - in: query
          name: page
          schema:
            type: integer
          description: Номер страницы.
      responses:
        "200":
          description: Список выражений.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/createExpressionResp'
        "404":
          description: Выражений не найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Внутренняя ошибка сервиса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /expressions/{id}:
    get:
      tags:
        - Expressions
      summary: Получение выражения по ID.
      description: Возвращает выражение по ID.
      operationId: getExpression
      parameters:
        - in: path
          name: id
          required: true
          description: ID выражения.
          schema:
            type: number
            format: int64
            minimum: 1
            example: 1
      responses:
        "200":
          description: Список выражений.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createExpressionResp'
        "404":
          description: Выражений не найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Внутренняя ошибка сервиса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /internal/task:
    get:
      tags:
        - Tasks
      summary: Получение задачи.
      description: Возвращает задачу.
      operationId: getTask
      responses:
        "200":
          description: Задача.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTask'
        "404":
          description: Выражений не найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Внутренняя ошибка сервиса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Tasks
      summary: Получает результат вычисления задачи.
      description:  Получает результат вычисления задачи.
      operationId: postTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postResult'
        required: true
      responses:
        "200":
          description: Результат успешно записан.
        "404":
          description: Задача или выражение не найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Невалидные данные.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Внутренняя ошибка сервиса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      description: Ответ с описанием ошибки.
      properties:
        status:
          type: string
          description: Статус ответа.
          example: "error"
        message:
          type: string
          description: Информация о ошибке.
          example: "error message"
      required:
        - status
        - message
    createExpressionReq:
      type: object
      properties:
        expression:
          type: string
          description: Выражение которое нужно вычислить.
          example: "log(18,18)^(-9)/3.14*(-12-3)*3/(-10)+2*sqrt(4)"
      required:
        - expression
    createExpressionResp:
      type: object
      properties:
        id:
          type: integer
          description: ID созданного выражения.
          format: int64
          minimum: 1
          example: 1
      required:
        - id
    getExpression:
      type: object
      properties:
        id:
          type: integer
          description: ID выражения.
          format: int64
          minimum: 1
          example: 1
        status:
          type: string
          description: Статус выражания
          example: "Waiting"
        result:
          type: number
          description: Результат выражения если оно решено.
          format: double
          example: 0.2
      required:
        - id
        - status
    getTask:
      type: object
      properties:
        id:
          type: integer
          description: ID выражения.
          format: int64
          minimum: 1
          example: 1
        arg1:
          type: number
          description: Первый аргумент операции.
          format: double
          example: 0.3
        arg2:
          type: number
          description: Второй аргумент операции, может быть ненужным.
          format: double
          example: 0.5
        operation:
          type: integer
          description: Операция в виде byte числа.
          format: int32
          example: 0
        operation_time:
          type: integer
          description: Время выполнения операции в мс.
          example: 1000000
      required:
        - id
        - arg1
        - operation
        - operation_time
    postResult:
      type: object
      properties:
        id:
          type: integer
          description: ID задачи.
          format: int64
          minimum: 1
          example: 1
        expression_id:
          type: integer
          description: ID выражения.
          format: int64
          minimum: 1
          example: 1
        result:
          type: number
          description: Результат выполнения операции если она выполнима.
          format: double
          example: 0.5
        error:
          type: string
          description: Сообщение ошибки если операция не выполнима.
          example: Division by zero
      required:
        - id
        - expression_id